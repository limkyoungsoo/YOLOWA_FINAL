<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
	<!-- Spring Security 인증처리로직를 정의한 클래스 -->
	<bean name="customizedAuthenticationProvider"
		class="org.springmvc.yolowa.security.MemberAuthenticationProvider" />
	<!-- Annotation 기반 spring security를 사용하기 위한 설정 -->
	<sec:global-method-security
		secured-annotations="enabled" />
	<sec:http use-expressions="true" access-denied-page="/denied.do" disable-url-rewriting="true">
		<sec:intercept-url pattern="/home.do" access="permitAll" />
		<sec:intercept-url pattern="/login_fail.do" access="permitAll" />
		<sec:intercept-url pattern="/loginView.do" access="permitAll" />
		<sec:intercept-url pattern="/registerView.do" access="permitAll" />
		<sec:intercept-url pattern="/registerMember.do" access="permitAll" />
		<sec:intercept-url pattern="/registerResultView.do" access="permitAll" />
		<sec:intercept-url pattern="/withdrawResultView.do" access="permitAll" />
		<sec:intercept-url pattern="/forgotIdView.do" access="permitAll" />
		<sec:intercept-url pattern="/changePassCheck.do" access="permitAll"/>
		<sec:intercept-url pattern="/changePassView.do" access="permitAll"/>
		<sec:intercept-url pattern="/changePass.do" access="permitAll"/>
		<sec:intercept-url pattern="/forgotId.do" access="permitAll" />
		<sec:intercept-url pattern="/idcheckAjax.do" access="permitAll" />
		<sec:intercept-url pattern="/denied.do" access="permitAll" />
		<sec:intercept-url pattern="/*.do" access="hasRole('ROLE_MEMBER')" />
		
		<sec:form-login login-page="/home.do"
			login-processing-url="/login.do" authentication-failure-url="/login_fail.do"
			username-parameter="id" default-target-url="/login_success.do"
			password-parameter="password" always-use-default-target="true" />
		<sec:logout logout-url="/logout.do" logout-success-url="/home.do" />
		<sec:session-management>
			<sec:concurrency-control max-sessions="1"
				error-if-maximum-exceeded="true" />
		</sec:session-management>
	</sec:http>
	<!-- 비밀번호 암호화를 위한 설정 -->
	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<sec:authentication-manager>
		<sec:authentication-provider ref="customizedAuthenticationProvider">
		</sec:authentication-provider>
	</sec:authentication-manager>
</beans>
	<!-- login-page : 로그인 페이지 주소를 지정 username-parameter : 로그인 페이지 form에 있는 
			username(아이디)의 name password-parameter : 로그인 페이지 form에 있는 password의 password 
			login-processing-url : 로그인 페이지 form action에 입력할 주소 지정 default-target-url 
			: 로그인 성공시 이동 주소 authentication-failure-url : 로그인 실패인 경우 이동 주소 -->
			
		<!-- security 적용대상 제외:모든 디렉토리의 js 확장자 파일은 제외하고자 할 때 -->
	<!-- <sec:http pattern="/**/*.js" security="none"></sec:http> -->
	<!-- XML 기반일 경우 아래와 같이 설정할 수 있다 만약 회원 전용시스템일 경우 모든 요청에 대해 access = "hasRole('ROLE_MEMBER') 
		또는 access = "hasAnyRole('ROLE_MEMBER','ROLE_ADMIN')" 을 주고 특정 서비스에 대해서 모든 
		사용자에게 접근할 수 있도록 하면 된다 <sec:intercept-url pattern="/register.do" access="permitAll" 
		/> -->
			<!-- <sec:intercept-url pattern="/admin_*" access="hasRole('ROLE_ADMIN')" 
			/> <sec:intercept-url pattern="/m_*" access="hasAnyRole('ROLE_MEMBER','ROLE_ADMIN')" 
			/> -->
